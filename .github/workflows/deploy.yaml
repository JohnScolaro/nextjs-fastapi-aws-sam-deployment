name: Deploy to AWS

on:
  push:
    branches:
      - "master"

env:
  SAM_TEMPLATE: template.yaml
  STACK_NAME: nextjs-fastapi-aws-sam-stack
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::018760403092:role/aws-sam-cli-managed-stage-CloudFormationExecutionRo-mWWs0KVTI38S
  TESTING_ARTIFACTS_BUCKET: aws-sam-cli-managed-stage-pipeline-artifactsbucket-llmmbjkcgtah
  TESTING_IMAGE_REPOSITORY: 018760403092.dkr.ecr.ap-southeast-2.amazonaws.com/aws-sam-cli-managed-stage-pipeline-resources-imagerepository-s33bt0toyc4v

jobs:
  deploy:
    name: Deploy Backend and Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup AWS SAM
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Build resources
        run: sam build --template ${SAM_TEMPLATE} --use-container

      - name: Assume the pipeline user role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/${{secrets.GITHUB_CD_DEPLOY_ROLE_NAME}}
          role-session-name: packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Upload artifacts to production artifact buckets
        run: |
          sam package \
            --s3-bucket ${PROD_ARTIFACTS_BUCKET} \
            --image-repository ${PROD_IMAGE_REPOSITORY} \
            --region ${PROD_REGION} \
            --output-template-file packaged-prod.yaml

      - uses: actions/upload-artifact@v4
        with:
          name: packaged-prod.yaml
          path: packaged-prod.yaml

      - name: Deploy to production account
        run: |
          sam deploy --stack-name ${PROD_STACK_NAME} \
            --template packaged-prod.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${PROD_REGION} \
            --s3-bucket ${PROD_ARTIFACTS_BUCKET} \
            --image-repository ${PROD_IMAGE_REPOSITORY} \
            --no-fail-on-empty-changeset \
            --role-arn ${PROD_CLOUDFORMATION_EXECUTION_ROLE}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Frontend Dependencies
        working-directory: frontend
        # Clean install of all dependencies
        run: npm ci

      - name: Build Frontend
        working-directory: frontend
        run: npm run build

      - name: Sync Frontend to S3
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws s3 sync frontend/build/ s3://your-frontend-bucket-name --delete
