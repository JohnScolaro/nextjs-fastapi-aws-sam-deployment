Transform: AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: "2010-09-09"
Resources:
  AppFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      CodeUri: app/
      Timeout: 900 # Set timeout to 15 mins (the max) instead of the default 3 seconds.
      Events:
        Root:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId:
              Ref: MyRegionalApi
        NonRoot:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId:
              Ref: MyRegionalApi
    Metadata:
      Dockerfile: Dockerfile.deploy
      DockerContext: ./backend
      DockerTag: backend-container
      DockerBuildArgs: {}

  MyRegionalApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MyRegionalApiName
      EndpointConfiguration: REGIONAL
      StageName: Prod

  FrontendBucket:
    Type: AWS::S3::Bucket

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: CloudFront access identity

  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: "s3:GetObject"
            Resource: !Sub
              - "arn:aws:s3:::${Bucket}/*"
              - Bucket: !Ref FrontendBucket
      Bucket: !Ref FrontendBucket

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt FrontendBucket.RegionalDomainName
            Id: FrontendBucket
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
          - DomainName: !Sub "${MyRegionalApi}.execute-api.${AWS::Region}.amazonaws.com"
            Id: Backend
            OriginPath: "/Prod"
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          TargetOriginId: FrontendBucket
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: true
        CacheBehaviors:
          - TargetOriginId: Backend
            PathPattern: "/api/*"
            DefaultTTL: 0
            MinTTL: 0
            MaxTTL: 0
            ViewerProtocolPolicy: https-only
            AllowedMethods: [GET, HEAD, OPTIONS, PUT, PATCH, POST, DELETE]
            # Get this by running `aws cloudfront list-cache-policies`
            CachePolicyId: "8c5e33e6-cacd-41df-965f-0f96de9d0983" # My custom policy to forward cookes
            # Get this by running `aws cloudfront list-origin-request-policies`
            OriginRequestPolicyId: "b689b0a8-53d0-40ab-baf2-68738e2966ac" # Managed-AllViewerExceptHostHeader
        Enabled: true
        DefaultRootObject: index.html

Outputs:
  Website:
    Description: The domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
